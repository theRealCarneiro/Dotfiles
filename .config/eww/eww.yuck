(include "modules/hyprland/workspaces.yuck")
(include "modules/stats/memory.yuck")
(include "modules/info/clock.yuck")
(include "modules/info/weather.yuck")

(defvar volume 1)

(defwidget bar [monitor]
  (centerbox :orientation "h"
    (modules_left :monitor monitor)
    (modules_center :monitor monitor)
    (modules_right :monitor monitor)))

(defwidget modules_left [?monitor]
    (box :space-evenly true
    :orientation "h"
    :halign "start"
    (label :text "cu")
))

(defwidget modules_center [?monitor]
    (box :space-evenly true
    :orientation "h"
    :halign "center"
    (workspaces :monitor monitor)
))

(defwidget modules_right [?monitor]
    (box :space-evenly false
    :class "modules_right"
    :orientation "h"
    :halign "end"
    :spacing 5
    (label :text "##" :class "module")
    (label :text "##" :class "module")
    (clock_module)
    ;(label :text "sim")
))

;(defwidget sidestuff []
  ;(box :class "sidestuff" :orientation "h" :space-evenly false :halign "end"
    ;(metric :label "ðŸ”Š"
            ;:value volume
            ;:onchange "amixer -D pulse sset Master {}%")
    ;(metric :label "ï¡š"
            ;:value {EWW_RAM.used_mem_perc}
            ;:onchange "")
    ;(metric :label "ðŸ’¾"
            ;:value {round((1 - (EWW_DISK["/"].free / EWW_DISK["/"].total)) * 100, 0)}
            ;:onchange "")
    ;time))

;(defwidget music []
  ;(box :class "music"
       ;:orientation "h"
       ;:space-evenly false
       ;:halign "center"
    ;{music != "" ? "ðŸŽµ${music}" : ""}))


;(defwidget metric [label value onchange]
  ;(box :orientation "h"
       ;:class "metric"
       ;:space-evenly false
    ;(box :class "label" label)
    ;(scale :min 0
           ;:max 101
           ;:active {onchange != ""}
           ;:value value
           ;:onchange onchange)))



;(deflisten music :initial ""
  ;"playerctl --follow metadata --format '{{ artist }} - {{ title }}' || true")

;(defpoll volume :interval "1s"
  ;"scripts/getvol")

;(defpoll time :interval "10s"
  ;"date '+%H:%M %b %d, %Y'")

(defwindow bar0
  :monitor 0
  :exclusive true
  :windowtype "dock"
  :geometry (geometry :x "0%"
                      :y "0%"
                      :width "100%"
                      :height "20px"
                      :anchor "top center")
  :reserve (struts :side "top" :distance "4%")
  (bar :monitor "0"))

(defwindow bar1
  :monitor 1
  :exclusive true
  :windowtype "dock"
  :geometry (geometry :x "0%"
                      :y "0%"
                      :width "100%"
                      :height "20px"
                      :anchor "top center")
  :reserve (struts :side "top" :distance "4%")
  (bar :monitor "1"))

(defwindow bar2
  :monitor 2
  :exclusive true
  :windowtype "dock"
  :geometry (geometry :x "0%"
                      :y "0%"
                      :width "100%"
                      :height "20px"
                      :anchor "top center")
  :reserve (struts :side "top" :distance "4%")
  (bar :monitor "2"))
