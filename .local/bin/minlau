#!/bin/bash

config_path=$XDG_CONFIG_HOME/games/config.ini

get_config(){
	config="$(awk "/\[$1\]/ {p=1;next}p" $config_path | sed 's/;.*//g')"
	next_block=$(grep -m1 "\[" <<< "$config")

	if [[ "$next_block" == [* ]]; then
		next_block=$(echo "$next_block" | sed 's/\[/\\\[/' | sed 's/\]/\\\]/')
		eval "$(echo "$config" | awk "!p;/$next_block/{p=1}" |\
			sed "s/$next_block.*//" | sed '/^$/d' | sed 's/^/export /')"
	else
		eval "$(echo "$config" | sed 's/^/export /')"
	fi
}


# create native dll override (stole from dxvk installation)
overrideDll() {
	$WINE reg add 'HKEY_CURRENT_USER\Software\Wine\DllOverrides' /v $1 /d native /f >/dev/null 2>&1
	if [ $? -ne 0 ]; then
		echo -e "Failed to add override for $1"
		exit 1
	fi
}


# remove dll override (stole from dxvk installation)
restoreDll() {
  $WINE reg delete 'HKEY_CURRENT_USER\Software\Wine\DllOverrides' /v $1 /f > /dev/null 2>&1
  if [ $? -ne 0 ]; then
    echo "Failed to remove override for $1"
  fi
}


install_dxvk(){
	if [[ -L "$system_dll_path/$1" ]]; then

		if [[ $(readlink -f "$system_dll_path/$1" | sed 's/\/x.*//') = $DXVK_VER ]];then
			echo "Updating $1 to $(sed 's/.*dxvk\///' <<< $DXVK_PATH)"
			ln -sfn "$DXVK_PATH/$(sed 's/win/x/' <<< $WINEARCH)/$1" $system_dll_path
			overrideDll $(sed 's/.dll//' <<< $1)
		else
			echo "$1 already up to date"
		fi

	else
		echo "Installing $1 $(sed 's/.*dxvk\///' <<< $DXVK_PATH)"
		[[ -f "$system_dll_path/$1" ]] && \
		mv -f "$system_dll_path/$1" "$system_dll_path/$1.orig"
		ln -sfn "$DXVK_PATH/$(sed 's/win/x/' <<< $WINEARCH)/$1" $system_dll_path
		overrideDll $(sed 's/.dll//' <<< $1)
	fi
}


uninstall_dxvk(){
	if [[ -L "$system_dll_path/$1" ]]; then
		echo "Restoring $1"
		restoreDll $(sed 's/.dll//' <<< $1)
		rm "$system_dll_path/$1"
		mv -f "$system_dll_path/$1.orig" "$system_dll_path/$1"
	fi
}

get_config 'global'
get_config $1

# open wine cfg and exit
if [[ $2 = 'cfg' ]]; then
	$(sed 's/wine64/wine/' <<< $WINE'cfg')
	exit
fi

# create prefix when thre's none
if [[ $WINEPREFIX != '' && ! -d $WINEPREFIX ]]; then
	 mkdir -p "$WINEPREFIX" 
	 $WINE wineboot
fi

# (un)install dxvk
if [[ $AUTO_DXVK = 1 ]]; then
	[[ $DXVK = 1 ]] && action="install_dxvk" || action="uninstall_dxvk" 
	system_dll_path="$WINEPREFIX/drive_c/windows/system32"
	for i in $(ls "$DXVK_PATH/$(sed 's/win/x/' <<< $WINEARCH)"); do
		$action $i
	done
fi

export DXVK_LOG_PATH=$WINEPREFIX
cd "$(dirname "$LAUNCH")"

if [[ $GAMEMODE = 1 ]]; then
	gamemoderun "$WINE" "$LAUNCH" "$ARGS"
else
	"$WINE" "$LAUNCH" "$ARGS"
fi

[[ $KILL != '' ]] && killall $KILL

